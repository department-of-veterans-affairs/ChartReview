Ext.data.JsonP.Siesta_Harness_Browser_ExtJSCore({"tagname":"class","name":"Siesta.Harness.Browser.ExtJSCore","autodetected":{},"files":[{"filename":"ExtJSCore.js","href":"ExtJSCore3.html#Siesta-Harness-Browser-ExtJSCore"}],"members":[{"name":"coverageUnit","tagname":"cfg","owner":"Siesta.Harness.Browser.ExtJSCore","id":"cfg-coverageUnit","meta":{}},{"name":"excludeCoverageUnits","tagname":"cfg","owner":"Siesta.Harness.Browser.ExtJSCore","id":"cfg-excludeCoverageUnits","meta":{}},{"name":"installLoaderInstrumentationHook","tagname":"cfg","owner":"Siesta.Harness.Browser.ExtJSCore","id":"cfg-installLoaderInstrumentationHook","meta":{}},{"name":"loaderPath","tagname":"cfg","owner":"Siesta.Harness.Browser.ExtJSCore","id":"cfg-loaderPath","meta":{}},{"name":"requires","tagname":"cfg","owner":"Siesta.Harness.Browser.ExtJSCore","id":"cfg-requires","meta":{}},{"name":"getLoaderInstrumentationHook","tagname":"method","owner":"Siesta.Harness.Browser.ExtJSCore","id":"method-getLoaderInstrumentationHook","meta":{}},{"name":"getLoaderPathHook","tagname":"method","owner":"Siesta.Harness.Browser.ExtJSCore","id":"method-getLoaderPathHook","meta":{}}],"alternateClassNames":[],"aliases":{},"id":"class-Siesta.Harness.Browser.ExtJSCore","component":false,"superclasses":[],"subclasses":[],"mixedInto":["Siesta.Harness.Browser.ExtJS","Siesta.Harness.Browser.SenchaTouch"],"mixins":[],"parentMixins":[],"requires":[],"uses":[],"html":"<div><pre class=\"hierarchy\"><h4>Mixed into</h4><div class='dependency'><a href='#!/api/Siesta.Harness.Browser.ExtJS' rel='Siesta.Harness.Browser.ExtJS' class='docClass'>Siesta.Harness.Browser.ExtJS</a></div><div class='dependency'><a href='#!/api/Siesta.Harness.Browser.SenchaTouch' rel='Siesta.Harness.Browser.SenchaTouch' class='docClass'>Siesta.Harness.Browser.SenchaTouch</a></div><h4>Files</h4><div class='dependency'><a href='source/ExtJSCore3.html#Siesta-Harness-Browser-ExtJSCore' target='_blank'>ExtJSCore.js</a></div></pre><div class='doc-contents'><p>This is a role (mixin), representing the shared functionality between Ext JS and SenchaTouch harnesses.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-cfg'>Config options</h3><div class='subsection'><div id='cfg-coverageUnit' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser.ExtJSCore'>Siesta.Harness.Browser.ExtJSCore</span><br/><a href='source/ExtJSCore.std3.html#Siesta-Harness-Browser-ExtJSCore-cfg-coverageUnit' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-coverageUnit' class='name expandable'>coverageUnit</a> : String<span class=\"signature\"></span></div><div class='description'><div class='short'>A string defining how the instrumented files are processed, can be either \"file\" or \"extjs_class\" (default value). ...</div><div class='long'><p>A string defining how the instrumented files are processed, can be either \"file\" or \"extjs_class\" (default value).</p>\n\n<p>The generic browser layer only recognizes the \"file\" value. Please refer its <a href=\"#!/api/Siesta.Harness.Browser-cfg-coverageUnit\" rel=\"Siesta.Harness.Browser-cfg-coverageUnit\" class=\"docClass\">documentation</a>\nfor details.</p>\n\n<p>This class adds a new coverage mode - \"extjs_class\". In this mode, in every file, Siesta will look\nfor <code>Ext.define(className, definition)</code> statements and only instrument these statements. Several classes can be\ninstrumented in one file. The resulting report will contain information about <strong>classes</strong>, not files. In this mode\nyou can preload one big file with all your classes concatenated and still get a meaningful coverage report.</p>\n\n<p>Please note that when using the \"extjs_class\" mode, any custom code statements between <code>Ext.define()</code> calls will not be instrumented.</p>\n\n<p>The same rules apply to files that are loaded on-demand with Ext.Loader, please see <a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-installLoaderInstrumentationHook\" rel=\"Siesta.Harness.Browser.ExtJSCore-cfg-installLoaderInstrumentationHook\" class=\"docClass\">installLoaderInstrumentationHook</a>.</p>\n\n<p><strong>This option is available only in the Siesta Standard package</strong>.</p>\n<p>Overrides: <a href=\"#!/api/Siesta.Harness.Browser-cfg-coverageUnit\" rel=\"Siesta.Harness.Browser-cfg-coverageUnit\" class=\"docClass\">Siesta.Harness.Browser.coverageUnit</a></p></div></div></div><div id='cfg-excludeCoverageUnits' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser.ExtJSCore'>Siesta.Harness.Browser.ExtJSCore</span><br/><a href='source/ExtJSCore.std3.html#Siesta-Harness-Browser-ExtJSCore-cfg-excludeCoverageUnits' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-excludeCoverageUnits' class='name expandable'>excludeCoverageUnits</a> : RegExp<span class=\"signature\"></span></div><div class='description'><div class='short'>A regular expression, defining which coverage units to exclude from the instrumentation. ...</div><div class='long'><p>A regular expression, defining which coverage units to exclude from the instrumentation.\nThe default value is /^Ext/ meaning that Ext JS framework classes will not be instrumented.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Harness.Browser-cfg-includeCoverageUnits\" rel=\"Siesta.Harness.Browser-cfg-includeCoverageUnits\" class=\"docClass\">includeCoverageUnits</a>,\n<a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-coverageUnit\" rel=\"Siesta.Harness.Browser.ExtJSCore-cfg-coverageUnit\" class=\"docClass\">coverageUnit</a>, <a href=\"#!/api/Siesta.Harness.Browser-cfg-enableCodeCoverage\" rel=\"Siesta.Harness.Browser-cfg-enableCodeCoverage\" class=\"docClass\">enableCodeCoverage</a></p>\n\n<p><strong>This option is available only in the Siesta Standard package</strong>.</p>\n<p>Defaults to: <code>/^Ext/</code></p><p>Overrides: <a href=\"#!/api/Siesta.Harness.Browser-cfg-excludeCoverageUnits\" rel=\"Siesta.Harness.Browser-cfg-excludeCoverageUnits\" class=\"docClass\">Siesta.Harness.Browser.excludeCoverageUnits</a></p></div></div></div><div id='cfg-installLoaderInstrumentationHook' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser.ExtJSCore'>Siesta.Harness.Browser.ExtJSCore</span><br/><a href='source/ExtJSCore.std3.html#Siesta-Harness-Browser-ExtJSCore-cfg-installLoaderInstrumentationHook' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-installLoaderInstrumentationHook' class='name expandable'>installLoaderInstrumentationHook</a> : Boolean<span class=\"signature\"></span></div><div class='description'><div class='short'>A boolean flag indicating whether Siesta should install the hook into the\nExt.Loader code, to instrument files being ...</div><div class='long'><p>A boolean flag indicating whether Siesta should install the hook into the\n<code>Ext.Loader</code> code, to instrument files being \"required\" on the fly.</p>\n\n<p><strong>Note:</strong> You may find, that the hook is installed later then needed and some classes are missing in the coverage report.\nIn this case, try to use the alternative method for hook installation, using <a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-method-getLoaderInstrumentationHook\" rel=\"Siesta.Harness.Browser.ExtJSCore-method-getLoaderInstrumentationHook\" class=\"docClass\">getLoaderInstrumentationHook</a> method.</p>\n\n<p><strong>Note:</strong> In both cases, the Ext JS loader will be switched the to synchronous loading mode, so that all files will be loaded\nwith an XHR request (and its possible to modify the loaded content) and not with &lt;script&gt; tag. Naturally, all\nfiles have to originate from the same domain.</p>\n\n<p>See also <a href=\"#!/api/Siesta.Harness.Browser-cfg-includeCoverageUnits\" rel=\"Siesta.Harness.Browser-cfg-includeCoverageUnits\" class=\"docClass\">includeCoverageUnits</a>, <a href=\"#!/api/Siesta.Harness.Browser-cfg-excludeCoverageUnits\" rel=\"Siesta.Harness.Browser-cfg-excludeCoverageUnits\" class=\"docClass\">excludeCoverageUnits</a>,\n<a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-coverageUnit\" rel=\"Siesta.Harness.Browser.ExtJSCore-cfg-coverageUnit\" class=\"docClass\">coverageUnit</a>, <a href=\"#!/api/Siesta.Harness.Browser-cfg-enableCodeCoverage\" rel=\"Siesta.Harness.Browser-cfg-enableCodeCoverage\" class=\"docClass\">enableCodeCoverage</a></p>\n\n<p><strong>This option is available only in Standard package</strong>.</p>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='cfg-loaderPath' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser.ExtJSCore'>Siesta.Harness.Browser.ExtJSCore</span><br/><a href='source/ExtJSCore3.html#Siesta-Harness-Browser-ExtJSCore-cfg-loaderPath' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-loaderPath' class='name expandable'>loaderPath</a> : Object<span class=\"signature\"></span></div><div class='description'><div class='short'>The path used to configure the Ext.Loader 'paths' config to resolve JS namespaces to file paths, for dynamic loading ...</div><div class='long'><p>The path used to configure the Ext.Loader 'paths' config to resolve JS namespaces to file paths, for dynamic loading of Ext JS classes.\nFor more information, please see the Ext docs: http://docs.sencha.com/extjs/apidocs/#!/api/Ext.Loader-cfg-paths</p>\n\n<p>See also <a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-requires\" rel=\"Siesta.Harness.Browser.ExtJSCore-cfg-requires\" class=\"docClass\">requires</a>.</p>\n\n<p>By default the value will be set right before the test starts. If you need to set it earlier (during preloading phase),\nuse <a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-method-getLoaderPathHook\" rel=\"Siesta.Harness.Browser.ExtJSCore-method-getLoaderPathHook\" class=\"docClass\">getLoaderPathHook</a> method.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n</div></div></div><div id='cfg-requires' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser.ExtJSCore'>Siesta.Harness.Browser.ExtJSCore</span><br/><a href='source/ExtJSCore3.html#Siesta-Harness-Browser-ExtJSCore-cfg-requires' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-requires' class='name expandable'>requires</a> : Array[String]<span class=\"signature\"></span></div><div class='description'><div class='short'>The array of class names, to be dynamically loaded with Ext.require call, before the test starts. ...</div><div class='long'><p>The array of class names, to be dynamically loaded with <code>Ext.require</code> call, before the test starts. Naturally, requires\nthe correct value for the <a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-loaderPath\" rel=\"Siesta.Harness.Browser.ExtJSCore-cfg-loaderPath\" class=\"docClass\">loaderPath</a> to be set.</p>\n\n<p>This option can be also specified in the test file descriptor.</p>\n</div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getLoaderInstrumentationHook' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser.ExtJSCore'>Siesta.Harness.Browser.ExtJSCore</span><br/><a href='source/ExtJSCore.std3.html#Siesta-Harness-Browser-ExtJSCore-method-getLoaderInstrumentationHook' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser.ExtJSCore-method-getLoaderInstrumentationHook' class='name expandable'>getLoaderInstrumentationHook</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string presentation of the ExtJS/SenchaTouch on-demand loader hook, suitable to be used in the test's\nprelo...</div><div class='long'><p>Returns a string presentation of the ExtJS/SenchaTouch on-demand loader hook, suitable to be used in the test's\n<a href=\"#!/api/Siesta.Harness-cfg-preload\" rel=\"Siesta.Harness-cfg-preload\" class=\"docClass\">preloads</a>. This will allow you to install the hook at the earliest possible point,\nright after preloading Ext and before \"requiring\" any classes.</p>\n\n<p>When using this method, there's no need to enable <a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-installLoaderInstrumentationHook\" rel=\"Siesta.Harness.Browser.ExtJSCore-cfg-installLoaderInstrumentationHook\" class=\"docClass\">installLoaderInstrumentationHook</a> option\n(which will become a no-op).</p>\n\n<p>Typical usage will be:</p>\n\n<pre><code>var Harness = <a href=\"#!/api/Siesta.Harness.Browser.ExtJS\" rel=\"Siesta.Harness.Browser.ExtJS\" class=\"docClass\">Siesta.Harness.Browser.ExtJS</a>;\n\nHarness.configure({\n    title                   : 'Code Coverage',\n\n    enableCodeCoverage      : true,\n    coverageUnit            : 'extjs_class',\n\n    preload                 : [\n        'http://cdn.sencha.io/ext-4.2.0-gpl/ext-all.js',\n        {\n            // inject the hook right after ExtJS and before application file\n            text    : Harness.getLoaderInstrumentationHook()\n        },\n        {\n            url         : 'app.js',\n            instrument  : true\n        }\n    ]\n});\n</code></pre>\n\n<p>Or, when using Siesta.Harness.hostPageUrl option:</p>\n\n<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;meta http-equiv=\"content-type\" content=\"text/html; charset=UTF-8\"&gt;\n\n        &lt;link rel=\"stylesheet\" type=\"text/css\" href=\"http://cdn.sencha.com/ext/gpl/4.2.0/resources/css/ext-all.css\"&gt;\n        &lt;script type=\"text/javascript\" src=\"http://cdn.sencha.com/ext/gpl/4.2.0/ext-all-debug.js\"&gt;&lt;/script&gt;\n\n        &lt;!-- \n            The hook needs to be installed after the Ext loader is available on the page\n        --&gt;\n        &lt;script type=\"text/javascript\"&gt;\n            // will be executed when running in testing environment only\n            parent.Harness &amp;&amp; eval(parent.Harness.getLoaderInstrumentationHook())\n        &lt;/script&gt;\n        &lt;!--\n            And before any code that uses it, like main application file or similar.\n         --&gt;\n         ....\n    &lt;/head&gt;\n    &lt;body&gt;\n        ....\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getLoaderPathHook' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Siesta.Harness.Browser.ExtJSCore'>Siesta.Harness.Browser.ExtJSCore</span><br/><a href='source/ExtJSCore3.html#Siesta-Harness-Browser-ExtJSCore-method-getLoaderPathHook' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Siesta.Harness.Browser.ExtJSCore-method-getLoaderPathHook' class='name expandable'>getLoaderPathHook</a>( <span class='pre'></span> ) : String<span class=\"signature\"></span></div><div class='description'><div class='short'>Returns a string presentation of the ExtJS/SenchaTouch hook for setting \"Ext.Loader\" paths, suitable to be used in th...</div><div class='long'><p>Returns a string presentation of the ExtJS/SenchaTouch hook for setting \"Ext.Loader\" paths, suitable to be used in the test's\n<a href=\"#!/api/Siesta.Harness-cfg-preload\" rel=\"Siesta.Harness-cfg-preload\" class=\"docClass\">preloads</a>. This will allow you to install the hook at the earliest possible point,\nright after preloading Ext and before \"requiring\" any classes.</p>\n\n<p>The value for the paths should be provided in the <a href=\"#!/api/Siesta.Harness.Browser.ExtJSCore-cfg-loaderPath\" rel=\"Siesta.Harness.Browser.ExtJSCore-cfg-loaderPath\" class=\"docClass\">loaderPath</a> config.\nThe inheritance of the value from groups is supported as usually.</p>\n\n<p>Typical usage will be:</p>\n\n<pre><code>var Harness = <a href=\"#!/api/Siesta.Harness.Browser.ExtJS\" rel=\"Siesta.Harness.Browser.ExtJS\" class=\"docClass\">Siesta.Harness.Browser.ExtJS</a>;\n\nHarness.configure({\n    loaderPath              : { 'My' : 'js', 'My.Namespace' : 'js/somepath' },\n\n    preload                 : [\n        'http://cdn.sencha.io/ext-4.2.0-gpl/ext-all.js',\n        {\n            // inject the loader paths right after ExtJS and before the application file\n            text    : Harness.getLoaderPathHook()\n        },\n        'app.js'\n    ]\n});\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","meta":{}});