Ext.data.JsonP.saucelabs_integration({"guide":"<h2 id='saucelabs_integration-section-intro'>Intro</h2>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/saucelabs_integration-section-intro'>Intro</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-authentication'>Authentication</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-quick-testing'>Quick testing</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-under-the-hood'>Under the hood</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-conclusion'>Conclusion</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-see-also%3A'>See also:</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-buy-this-product'>Buy this product</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-support'>Support</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-see-also'>See also</a></li>\n<li><a href='#!/guide/saucelabs_integration-section-copyright-and-license'>COPYRIGHT AND LICENSE</a></li>\n</ol>\n</div>\n\n<p>The more tests we write, the more free time we have to improve the quality of our software. Without tests, it's easy to end up constantly chasing the\nsame bugs again and again after each refactoring. A logical step to improving the quality of a web based application is to make\nsure it works in all the various browsers out there. Normally you need to support old and sometimes obsolete operation systems, like\nWindows XP and browsers which require their own VM (IE7, 8, 9 etc). The number of platforms that we want to run our tests on is constantly growing.</p>\n\n<p>One way to solve this requirement is to maintain your own farm of virtual machines with various OS/browser combinations.\nThis can be tricky and will consume lots of your time and resources.\nAnother more elegant way is to use services providing the same infrastructure in the cloud.\nThanks to services such as <a href=\"http://www.saucelabs.com/\">Sauce Labs</a> it is now very simple.</p>\n\n<p>This guide describes the integration facilities that Siesta provides to access the Sauce Labs cloud testing infrastructure.</p>\n\n<h2 id='saucelabs_integration-section-authentication'>Authentication</h2>\n\n<p>When registering an account in Sauce Labs, you will receive a user name (displayed in the right top corner after logging in) and an api key\n(can be found in the left-bottom corner of the \"Account\" page).\nLater in this guide we will refer to these as \"Sauce Labs username\" and \"Sauce Labs access key\" (or Sauce Labs API key).</p>\n\n<h2 id='saucelabs_integration-section-quick-testing'>Quick testing</h2>\n\n<p>Assuming your local web server is configured to listen at host \"localhost\" on port 80, all you need to launch your test suite in the cloud\nis to sign up for the SauceLabs trial and run the following command:</p>\n\n<pre><code>__SIESTA_DIR__/bin/webdriver http://localhost/myproject/tests/harness.html --saucelabs SL_USERNAME,SL_KEY \n--cap browserName=firefox --cap platform=windows\n</code></pre>\n\n<p>That's all, the only difference from a normal Siesta automated launch, is the \"--saucelabs\" option, which is a shortcut performing\na few additional actions. We'll examine what happens under the hood later in this guide.</p>\n\n<p>Note how we have specified the desired OS/browser combination using the \"--cap\" switch (it specifies remote webdriver capability).\nFor a full list of supported capabilities please refer to <a href=\"https://code.google.com/p/selenium/wiki/DesiredCapabilities\">https://code.google.com/p/selenium/wiki/DesiredCapabilities</a>.</p>\n\n<p>If your webserver listens on a different host (<code>mylocalhost</code> for example) or port (8888), then the \"--saucelabs\" option should look like:</p>\n\n<pre><code>--saucelabs SL_USERNAME,SL_KEY,mylocalhost,8888\n</code></pre>\n\n<h2 id='saucelabs_integration-section-under-the-hood'>Under the hood</h2>\n\n<p>Let's examine what happens under the hood when we use the  \"--saucelabs\" shortcut option. In fact, we don't have to use this shortcut\noption and can perform all the steps listed below manually.</p>\n\n<p>1) The first thing that happens is that Siesta establishes a local tunnel from your machine to the SauceLabs server, using the SauceLabs binaries.\nYou can do this step manually by using the batch file in the Siesta package:</p>\n\n<pre><code> __SIESTA_DIR__/bin/sc -u SL_USERNAME -k SL_API_KEY\n</code></pre>\n\n<p>When launched successfully, you should see the following text:</p>\n\n<pre><code>11 Aug 13:21:22 - Sauce Connect 4.3, build 1283 399e76d\n11 Aug 13:21:22 - Using CA certificate bundle /etc/ssl/certs/ca-certificates.crt.\n.....\n11 Aug 13:22:12 - Starting Selenium listener...\n11 Aug 13:22:15 - Sauce Connect is up, you may start your tests.\n11 Aug 13:22:15 - Connection established.\n</code></pre>\n\n<p>2) The \"--host\" option is set to point to the SauceLabs server, based on your username and access key:</p>\n\n<pre><code>--host=\"http://SL_USERNAME:SL_API_KEY@ondemand.saucelabs.com:80/wd/hub\"\n</code></pre>\n\n<p>To sum up, instead of using the \"--saucelabs\" shortcut option, we could:</p>\n\n<ul>\n<li><p>launch the tunnel manually:</p>\n\n<pre><code>  __SIESTA_DIR__/bin/sc -u SL_USERNAME -k SL_API_KEY\n</code></pre></li>\n<li><p>specify the command as:</p>\n\n<pre><code>  __SIESTA_DIR__/bin/webdriver http://localhost/myproject/tests/harness.html \n      --host=\"http://SL_USERNAME:SL_API_KEY@ondemand.saucelabs.com:80/wd/hub\" \n      --cap browserName=firefox --cap platform=XP \n</code></pre></li>\n</ul>\n\n\n<p>For convenience, instead of setting the \"--host\" option manually, one can specify \"--saucelabs-user\" and \"--saucelabs-key\" options.</p>\n\n<pre><code>    __SIESTA_DIR__/bin/webdriver http://localhost/myproject/tests/harness.html \n        --saucelabs-user=SL_USERNAME --saucelabs-key=SL_API_KEY\n        --cap browserName=firefox --cap platform=XP\n</code></pre>\n\n<h2 id='saucelabs_integration-section-conclusion'>Conclusion</h2>\n\n<p>As you can see, thanks to the excellent <a href=\"http://www.saucelabs.com\">Sauce Labs</a> infrastructure, launching your tests in the cloud is as easy as specifying\none extra argument on the command line. The benefits of cloud testing are obvious - no need to waste time and resources setting up and maintaining your own VM farm,\nand additionally you can run your test suite in various browsers in parallel.</p>\n\n<h2 id='saucelabs_integration-section-see-also%3A'>See also:</h2>\n\n<p><a href=\"https://docs.saucelabs.com/reference/sauce-connect/\">https://docs.saucelabs.com/reference/sauce-connect/</a></p>\n\n<h2 id='saucelabs_integration-section-buy-this-product'>Buy this product</h2>\n\n<p>Visit our store: <a href=\"http://bryntum.com/store/siesta\">http://bryntum.com/store/siesta</a></p>\n\n<h2 id='saucelabs_integration-section-support'>Support</h2>\n\n<p>Ask a question in our community forum: <a href=\"http://www.bryntum.com/forum/viewforum.php?f=20\">http://www.bryntum.com/forum/viewforum.php?f=20</a></p>\n\n<p>Share your experience in our IRC channel: <a href=\"http://webchat.freenode.net/?randomnick=1&amp;channels=bryntum&amp;prompt=1\">#bryntum</a></p>\n\n<p>Please report any bugs through the web interface at <a href=\"https://www.assembla.com/spaces/bryntum/support/tickets\">https://www.assembla.com/spaces/bryntum/support/tickets</a></p>\n\n<h2 id='saucelabs_integration-section-see-also'>See also</h2>\n\n<p>Web page of this product: <a href=\"http://bryntum.com/products/siesta\">http://bryntum.com/products/siesta</a></p>\n\n<p>Other Bryntum products: <a href=\"http://bryntum.com/products\">http://bryntum.com/products</a></p>\n\n<h2 id='saucelabs_integration-section-copyright-and-license'>COPYRIGHT AND LICENSE</h2>\n\n<p>Copyright (c) 2009-2014, Bryntum AB &amp; Nickolay Platonov</p>\n\n<p>All rights reserved.</p>\n","title":"Cloud testing. Sauce Labs integration"});